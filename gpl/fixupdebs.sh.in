#!/bin/bash

# This script helps workaround current CPack (2.8.8) limitations
# Since the current CPackDeb component support does not let us set info
# for individual packages, this scripts unpack the debs, add the deps and descriptions, then repack them
#
# It expects to be run with debs in the cwd

function Enabled() {
  local use=0
  if [ "$1" == "ON" ]; then
    use=1
  fi
  if [ "$1" == "1" ]; then
    use=1
  fi
  echo $use
}

function Unpack() {
  mkdir tmp
  dpkg-deb -R $1 tmp
  cd tmp/DEBIAN
}

function Pack() {
  sed '/^$/d' -i control
  if [ "$(Enabled '@GoTools_COMPILE_GPL@')" == "1" ]; then
    @PROJECT_SOURCE_DIR@/gpl/generate_gpl_headers ..
  fi
  cd ../..
  dpkg-deb -b tmp $1
  rm /tmp/debfixer/tmp -rf
}


function Remove() {
  rm -f $1
}

path=`pwd`
mkdir -p UbuntuDebs
rm -f UbuntuDebs/*
arch=`dpkg --print-architecture`
code=`lsb_release -sc`
version=@GoTools_VERSION@
test -d /tmp/debfixer || mkdir /tmp/debfixer
cd /tmp/debfixer

# GoTools-core
Unpack $path/libgotools_${version}_$arch-$code-core.deb
Pack $path/UbuntuDebs/libgotools-core_${version}_$arch-$code.deb
Remove $path/libgotools_${version}_$arch-$code-core.deb

#GoTools-core - dev package
Unpack $path/libgotools_${version}_$arch-$code-core-dev.deb
sed -i control -e 's/\(Description: .*$\)/\1 - development headers/g'
sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
echo "Depends: libgotools-core" >> control
Pack $path/UbuntuDebs/libgotools-core-dev_${version}_all-$code.deb
Remove $path/libgotools_${version}_$arch-$code-core-dev.deb

# sisl
Unpack $path/libgotools_${version}_$arch-$code-sisl.deb
sed -i control -e 's/\(Package: .*$\)/Package: libsisl/g'
sed -i control -e 's/\(Description: .*$\)/\1 - sisl lib/g'
Pack $path/UbuntuDebs/libsisl_${version}_$arch-$code.deb
Remove $path/libgotools_${version}_$arch-$code-sisl.deb

# newmat
Unpack $path/libgotools_${version}_$arch-$code-newmat.deb
sed -i control -e 's/\(Package: .*$\)/Package: libnewmat/g'
sed -i control -e 's/\(Description: .*$\)/\1 - newmat lib/g'
Pack $path/UbuntuDebs/libnewmat_${version}_$arch-$code.deb
Remove $path/libgotools_${version}_$arch-$code-newmat.deb

#newmat - dev package
Unpack $path/libgotools_${version}_$arch-$code-newmat-dev.deb
sed -i control -e 's/\(Package: .*$\)/Package: libnewmat-dev/g'
sed -i control -e 's/\(Description: .*$\)/\1 - newmat lib - development headers/g'
sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
echo "Depends: libnewmat" >> control
Pack $path/UbuntuDebs/libnewmat-dev_${version}_all-$code.deb
Remove $path/libgotools_${version}_$arch-$code-newmat-dev.deb

#sisl - dev package
Unpack $path/libgotools_${version}_$arch-$code-sisl-dev.deb
sed -i control -e 's/\(Package: .*$\)/Package: libsisl-dev/g'
sed -i control -e 's/\(Description: .*$\)/\1 - sisl lib - development headers/g'
sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
echo "Depends: libsisl" >> control
Pack $path/UbuntuDebs/libsisl-dev_${version}_all-$code.deb
Remove $path/libgotools_${version}_$arch-$code-sisl-dev.deb

# ttl
Unpack $path/libgotools_${version}_$arch-$code-ttl.deb
sed -i control -e 's/\(Package: .*$\)/Package: libttl/g'
sed -i control -e 's/\(Description: .*$\)/\1 - ttl lib/g'
Pack $path/UbuntuDebs/libttl_${version}_$arch-$code.deb
Remove $path/libgotools_${version}_$arch-$code-ttl.deb

#ttl - dev package
Unpack $path/libgotools_${version}_$arch-$code-ttl-dev.deb
sed -i control -e 's/\(Package: .*$\)/Package: libttl-dev/g'
sed -i control -e 's/\(Description: .*$\)/\1 - ttl lib - development headers/g'
sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
echo "Depends: libttl" >> control
Pack $path/UbuntuDebs/libttl-dev_${version}_all-$code.deb
Remove $path/libgotools_${version}_$arch-$code-ttl-dev.deb

# igeslib
if [ "$(Enabled '@GoTools_COMPILE_MODULE_igeslib@')" == "1" ]; then
  Unpack $path/libgotools_${version}_$arch-$code-igeslib.deb
  echo "Depends: libgotools-core, libsisl" >> control
  sed -i control -e 's/\(Description: .*$\)/\1 - igeslib/g'
  Pack $path/UbuntuDebs/libgotools-igeslib_${version}_$arch-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-igeslib.deb

  #igeslib - dev package
  Unpack $path/libgotools_${version}_$arch-$code-igeslib-dev.deb
  sed -i control -e 's/\(Description: .*$\)/\1 - igeslib - development headers/g'
  echo "Depends: libgotools-igeslib, libgotools-core-dev, libsisl-dev" >> control
  sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
  Pack $path/UbuntuDebs/libgotools-igeslib-dev_${version}_all-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-igeslib-dev.deb
fi

# parametrization
if [ "$(Enabled '@GoTools_COMPILE_MODULE_parametrization@')" == "1" ]; then
  Unpack $path/libgotools_${version}_$arch-$code-parametrization.deb
  echo "Depends: libgotools-core" >> control
  sed -i control -e 's/\(Description: .*$\)/\1 - parametrization/g'
  Pack $path/UbuntuDebs/libgotools-parametrization_${version}_$arch-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-parametrization.deb

  #parametrization - dev package
  Unpack $path/libgotools_${version}_$arch-$code-parametrization-dev.deb
  sed -i control -e 's/\(Description: .*$\)/\1 - parametrization - development headers/g'
  echo "Depends: libgotools-parametrization, libgotools-core-dev" >> control
  sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
  Pack $path/UbuntuDebs/libgotools-parametrization-dev_${version}_all-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-parametrization-dev.deb
fi

# implicitization
if [ "$(Enabled '@GoTools_COMPILE_MODULE_implicitization@')" == "1" ]; then
  Unpack $path/libgotools_${version}_$arch-$code-implicitization.deb
  echo "Depends: libgotools-core, libsisl, libnewmat" >> control
  sed -i control -e 's/\(Description: .*$\)/\1 - implicitization/g'
  Pack $path/UbuntuDebs/libgotools-implicitization_${version}_$arch-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-implicitization.deb

  #implicitization - dev package
  Unpack $path/libgotools_${version}_$arch-$code-implicitization-dev.deb
  sed -i control -e 's/\(Description: .*$\)/\1 - implicitization - development headers/g'
  echo "Depends: libgotools-implicitization, libgotools-core-dev, libsisl-dev, libnewmat-dev" >> control
  sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
  Pack $path/UbuntuDebs/libgotools-implicitization-dev_${version}_all-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-implicitization-dev.deb
fi

# intersections
if [ "$(Enabled '@GoTools_COMPILE_MODULE_intersections@')" == "1" ]; then
  Unpack $path/libgotools_${version}_$arch-$code-intersections.deb
  echo "Depends: libgotools-core, libgotools-igeslib, libgotools-implicitization, libsisl, libnewmat" >> control
  sed -i control -e 's/\(Description: .*$\)/\1 - intersections/g'
  Pack $path/UbuntuDebs/libgotools-intersections_${version}_$arch-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-intersections.deb

  #intersections - dev package
  Unpack $path/libgotools_${version}_$arch-$code-intersections-dev.deb
  sed -i control -e 's/\(Description: .*$\)/\1 - intersections - development headers/g'
  echo "Depends: libgotools-intersections, libgotools-core-dev, libgotools-igeslib-dev, libgotools-implicitization-dev, libsisl-dev, libnewmat-dev" >> control
  sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
  Pack $path/UbuntuDebs/libgotools-intersections-dev_${version}_all-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-intersections-dev.deb
fi

# trivariate
if [ "$(Enabled '@GoTools_COMPILE_MODULE_trivariate@')" == "1" ]; then
  Unpack $path/libgotools_${version}_$arch-$code-trivariate.deb
  echo "Depends: libgotools-core, libsisl" >> control
  sed -i control -e 's/\(Description: .*$\)/\1 - trivariate/g'
  Pack $path/UbuntuDebs/libgotools-trivariate_${version}_$arch-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-trivariate.deb

  #trivariate - dev package
  Unpack $path/libgotools_${version}_$arch-$code-trivariate-dev.deb
  sed -i control -e 's/\(Description: .*$\)/\1 - trivariate - development headers/g'
  echo "Depends: libgotools-trivariate, libgotools-core-dev, libsisl-dev" >> control
  sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
  Pack $path/UbuntuDebs/libgotools-trivariate-dev_${version}_all-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-trivariate-dev.deb
fi

# viewlib
if [ "$(Enabled '@GoTools_COMPILE_MODULE_viewlib@')" == "1" ]; then
  Unpack $path/libgotools_${version}_$arch-$code-viewlib.deb
  echo "Depends: libgotools-core, libgotools-igeslib, libsisl, libqt4, libboost" >> control
  sed -i control -e 's/\(Description: .*$\)/\1 - viewlib/g'
  Pack $path/UbuntuDebs/libgotools-viewlib_${version}_$arch-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-viewlib.deb

  #viewlib - dev package
  Unpack $path/libgotools_${version}_$arch-$code-viewlib-dev.deb
  sed -i control -e 's/\(Description: .*$\)/\1 - viewlib - development headers/g'
  echo "Depends: libgotools-viewlib, ibgotools-core-dev, libgotools-igeslib-dev, libsisl-dev, libqt4-dev, libboost-dev" >> control
  sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
  Pack $path/UbuntuDebs/libgotools-viewlib-dev_${version}_all-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-viewlib-dev.deb
fi

# topology
if [ "$(Enabled '@GoTools_COMPILE_MODULE_topology@')" == "1" ]; then
  Unpack $path/libgotools_${version}_$arch-$code-topology.deb
  echo "Depends: libgotools-core" >> control
  sed -i control -e 's/\(Description: .*$\)/\1 - topology/g'
  Pack $path/UbuntuDebs/libgotools-topology_${version}_$arch-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-topology.deb

  #topology - dev package
  Unpack $path/libgotools_${version}_$arch-$code-topology-dev.deb
  sed -i control -e 's/\(Description: .*$\)/\1 - topology - development headers/g'
  echo "Depends: libgotools-topology, libgotools-core-dev" >> control
  sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
  Pack $path/UbuntuDebs/libgotools-topology-dev_${version}_all-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-topology-dev.deb
fi

# compositemodel
if [ "$(Enabled '@GoTools_COMPILE_MODULE_compositemodel@')" == "1" ]; then
  Unpack $path/libgotools_${version}_$arch-$code-compositemodel.deb
  echo "Depends: libgotools-core, libgotools-parametrization, libgotools-topology, libgotools-implicitization, libgotools-igeslib, libttl, libsisl, libnewmat" >> control
  sed -i control -e 's/\(Description: .*$\)/\1 - compositemodel/g'
  Pack $path/UbuntuDebs/libgotools-compositemodel_${version}_$arch-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-compositemodel.deb

  #compositemodel - dev package
  Unpack $path/libgotools_${version}_$arch-$code-compositemodel-dev.deb
  sed -i control -e 's/\(Description: .*$\)/\1 - compositemodel - development headers/g'
  echo "Depends: libgotools-compositemodel, libgotools-core-dev, libgotools-parametrization-dev, libgotools-topology-dev, libgotools-implicitization-dev, libgotools-igeslib-dev, libttl-dev, libsisl-dev, libnewmat-dev" >> control
  sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
  Pack $path/UbuntuDebs/libgotools-compositemodel-dev_${version}_all-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-compositemodel-dev.deb
fi

# trivariatemodel
if [ "$(Enabled '@GoTools_COMPILE_MODULE_trivariatemodel@')" == "1" ]; then
  Unpack $path/libgotools_${version}_$arch-$code-trivariatemodel.deb
  echo "Depends: libgotools-core, libgotools-parametrization, libgotools-topology, libgotools-intersections, libgotools-implicitization, libgotools-igeslib, libgotools-trivariate, libsisl, libnewmat" >> control
  sed -i control -e 's/\(Description: .*$\)/\1 - trivariatemodel/g'
  Pack $path/UbuntuDebs/libgotools-trivariatemodel_${version}_$arch-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-trivariatemodel.deb

  #trivariatemodel - dev package
  Unpack $path/libgotools_${version}_$arch-$code-trivariatemodel-dev.deb
  sed -i control -e 's/\(Description: .*$\)/\1 - trivariatemodel - development headers/g'
  echo "Depends: libgotools-trivariatemodel, libgotools-core-dev, libgotools-parametrization-dev, libgotools-topology-dev, libgotools-intersections-dev, libgotools-implicitization-dev, libgotools-igeslib-dev, libgotools-trivariate-dev, libsisl-dev, libnewmat-dev" >> control
  sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
  Pack $path/UbuntuDebs/libgotools-trivariatemodel-dev_${version}_all-$code.deb
  Remove $path/libgotools_${version}_$arch-$code-trivariatemodel-dev.deb
fi

if [ "$(Enabled '@GoTools_COMPILE_GPL@')" == "0" ]; then
  # qualitymodule
  if [ "$(Enabled '@GoTools_COMPILE_MODULE_qualitymodule@')" == "1" ]; then
    Unpack $path/libgotools_${version}_$arch-$code-qualitymodule.deb
    echo "Depends: libgotools-core, libgotools-igeslib, libgotools-implicitization, libgotools-intersections, libgotools-parametrization, libgotools-trivariate, libgotools-compositemodel, libgotools-topology, libsisl, libnewmat" >> control
    sed -i control -e 's/\(Description: .*$\)/\1 - quality module/g'
    Pack $path/UbuntuDebs/libgotools-qualitymodule_${version}_$arch-$code.deb
    Remove $path/libgotools_${version}_$arch-$code-qualitymodule.deb

    #qualitymodule - dev package
    Unpack $path/libgotools_${version}_$arch-$code-qualitymodule-dev.deb
    sed -i control -e 's/\(Description: .*$\)/\1 - quality module - development headers/g'
    echo "Depends: libgotools-qualitymodule, libgotools-core-dev, libgotools-igeslib-dev, libgotools-implicitization-dev, libgotools-intersections-dev, libgotools-parametrization-dev, libgotools-trivariate-dev, libgotools-compositemodel-dev, libgotools-topology-dev, libsisl-dev, libnewmat-dev" >> control
    sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
    Pack $path/UbuntuDebs/libgotools-qualitymodule-dev_${version}_all-$code.deb
    Remove $path/libgotools_${version}_$arch-$code-qualitymodule-dev.deb
  fi

  # modeltoolbox
  if [ "$(Enabled '@GoTools_COMPILE_MODULE_model_toolbox@')" == "1" ]; then
    Unpack $path/libgotools_${version}_$arch-$code-modeltoolbox.deb
    echo "Depends: libgotools-core, libgotools-compositemodel, libgotools-parametrization, libgotools-topology, libgotools-implicitization, libgotools-igeslib, libgotools-trivariate, libttl, libsisl, libnewmat" >> control
    sed -i control -e 's/\(Description: .*$\)/\1 - model toolbox/g'
    Pack $path/UbuntuDebs/libgotools-modeltoolbox_${version}_$arch-$code.deb
    Remove $path/libgotools_${version}_$arch-$code-modeltoolbox.deb

    #modeltoolbox - dev package
    Unpack $path/libgotools_${version}_$arch-$code-modeltoolbox-dev.deb
    sed -i control -e 's/\(Description: .*$\)/\1 - model toolbox - development headers/g'
    echo "Depends: libgotools-modeltooxbox, libgotools-core-dev, libgotools-compositemodel-dev, libgotools-parametrization-dev, libgotools-topology-dev, libgotools-implicitization-dev, libgotools-igeslib-dev, libgotools-trivariate-dev, libttl-dev, libsisl-dev, libnewmat-dev" >> control
    sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
    Pack $path/UbuntuDebs/libgotools-modeltoolbox-dev_${version}_all-$code.deb
    Remove $path/libgotools_${version}_$arch-$code-modeltoolbox-dev.deb
  fi

  # isogeometricmodel
  if [ "$(Enabled '@GoTools_COMPILE_MODULE_isogeometric_model@')" == "1" ]; then
    Unpack $path/libgotools_${version}_$arch-$code-isogeometricmodel.deb
    echo "Depends: libgotools-core, libgotools-trivariatemodel, libgotools-compositemodel, libgotools-parametrization, libgotools-topology, libgotools-intersections, libgotools-implicitization, libgotools-igeslib, libgotools-trivariate, libsisl, libnewmat" >> control
    sed -i control -e 's/\(Description: .*$\)/\1 - isogeometric model/g'
    Pack $path/UbuntuDebs/libgotools-isogeometricmodel_${version}_$arch-$code.deb
    Remove $path/libgotools_${version}_$arch-$code-isogeometricmodel.deb

    #isogeometricmodel - dev package
    Unpack $path/libgotools_${version}_$arch-$code-isogeometricmodel-dev.deb
    sed -i control -e 's/\(Description: .*$\)/\1 - isogeometric model - development headers/g'
    echo "Depends: libgotools-isogeometricmodel, libgotools-core-dev, libgotools-trivariatemodel-dev, libgotools-compositemodel-dev, libgotools-parametrization-dev, libgotools-topology-dev, libgotools-intersections-dev, libgotools-implicitization-dev, libgotools-igeslib-dev, libgotools-trivariate-dev, libsisl-dev, libnewmat-dev" >> control
    sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
    Pack $path/UbuntuDebs/libgotools-isogeometricmodel-dev_${version}_all-$code.deb
    Remove $path/libgotools_${version}_$arch-$code-isogeometricmodel-dev.deb
  fi

  # lrsplines
  if [ "$(Enabled '@GoTools_COMPILE_MODULE_lr_splines@')" == "1" ]; then
    Unpack $path/libgotools_${version}_$arch-$code-lrsplines.deb
    echo "Depends: libgotools-core, libboost" >> control
    sed -i control -e 's/\(Description: .*$\)/\1 - LR splines/g'
    Pack $path/UbuntuDebs/libgotools-lsplines_${version}_$arch-$code.deb
    Remove $path/libgotools_${version}_$arch-$code-lrsplines.deb

    #lrsplines - dev package
    Unpack $path/libgotools_${version}_$arch-$code-lrsplines-dev.deb
    sed -i control -e 's/\(Description: .*$\)/\1 - LR splines - development headers/g'
    echo "Depends: libgotools-lrsplines, libgotools-core-dev, libboost-dev" >> control
    sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
    Pack $path/UbuntuDebs/libgotools-lrsplines-dev_${version}_all-$code.deb
    Remove $path/libgotools_${version}_$arch-$code-lrsplines-dev.deb
  fi

  # geometricmodeler
  if [ "$(Enabled '@GoTools_COMPILE_MODULE_geometric_modeler@')" == "1" ]; then
    Unpack $path/libgotools_${version}_$arch-$code-geometricmodeler.deb
    echo "Depends: libgotools-core, libgotools-trivariatemodel, libgotools-modeltoolbox, libgotools-compositemodel, libgotools-parametrization, libgotools-intersections, libgotools-implicitization, libgotools-igeslib, libttl, libsisl, libnewmat, libboost" >> control
    sed -i control -e 's/\(Description: .*$\)/\1 - geometric modeler/g'
    Pack $path/UbuntuDebs/libgotools-geometricmodeler_${version}_$arch-$code.deb
    Remove $path/libgotools_${version}_$arch-$code-geometricmodeler.deb

    #geometricmodeler - dev package
    Unpack $path/libgotools_${version}_$arch-$code-geometricmodeler-dev.deb
    sed -i control -e 's/\(Description: .*$\)/\1 - geometric modeler - development headers/g'
    echo "Depends: libgotools-geometricmodeler, libgotools-core-dev, libgotools-trivariatemodel-dev, libgotools-modeltoolbox-dev, libgotools-compositemodel-dev, libgotools-parametrization-dev, libgotools-intersections-dev, libgotools-implicitization-dev, libgotools-igeslib-dev, libttl-dev, libsisl-dev, libnewmat-dev, libboost-dev" >> control
    sed -i control -e 's/\(Architecture: .*$\)/Architecture: all/g'
    Pack $path/UbuntuDebs/libgotools-geometricmodeler-dev_${version}_all-$code.deb
    Remove $path/libgotools_${version}_$arch-$code-geometricmodeler-dev.deb
  fi
fi

rmdir /tmp/debfixer
